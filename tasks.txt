Домашнее задание
Работа с Web-серверами
Цель: Закрепит навыки работы с веб-серверами; Построит приложение, которое будет не только выполнять поставленную задачу, но и иметь повышенную отказоустойчивость ввиду зеркалирования и балансировки.
1. Приложение верификации email

1.1. Реализовать приложение (сервис/функцию) для верификации email.
1.2. Реализация будет в будущем встроена в более крупное решение.
1.3. Минимальный функционал - список строк, которые необходимо проверить на наличие валидных email.
1.4. Валидация по регулярным выражения и проверке DNS mx записи, без полноценной отправки письма-подтверждения.

2. Создать как минимум три машины/контейнера
2.1. Балансировщик nginx-upstream
2.2. Балансируемые бэкенды на nginx+php-fpm

Критерии оценки:
1. Желательно иметь возможность лёгкого расширения правил верификации дополнительными средствами.
2. Проверка MX-записи должна производиться встроенными средствами PHP
3. Каждая балансируемая нода должна выводить свой IP, чтобы клиент видел, на какую ноду он пришёл.


module
----------
class verifyEmail

baseRule = '';
addRule = '';


checkDNS(email);
//DNS mx()
// inner PHP func

rules = [baseRule, checkDNS, addRule];

verifyEmail(email, rules): bool

return verifyEmail  - bool
-------

client code, use module
-------
Emails = [];
get email from file
return listEmails = [isValidEmails, isNotValidEmails];

*******************************

Домашнее задание 8
Сканер уязвимостей
Цель: Научится работать с базовыми средствами исследования уязвимостей инфраструктуры.
Установить сканер уязвимостей Nessus Scaner (использовать готовые сборки или собрать самостоятельно).
Просканировать свои проекты в режимах Basic Scan, Web Application Tetsts
Результат работы сканера в виде документа присылаете в чат по ДЗ.
Также требуется прокомментировать уязвимости и Ваши шаги по их устранению.

Если своего проекта нет, то выбираем сайт (желательно что-то небольшое - там больше вероятность что-то найти), и строим отчёт с рекомендациями.